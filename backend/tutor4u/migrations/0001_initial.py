# Generated by Django 5.0 on 2023-12-19 09:40

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('NON_BINARY', 'Non-Binary'), ('OTHER', 'Other')], default='', max_length=10)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='uploads/', validators=[django.core.validators.validate_image_file_extension])),
                ('is_admin', models.BooleanField(default=False)),
                ('is_tutor', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('approved', models.BooleanField(default=False)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=4)),
                ('available', models.BooleanField(default=True)),
                ('remote', models.BooleanField(default=True)),
                ('in_person', models.BooleanField(default=True)),
                ('location', models.CharField(max_length=30)),
                ('qualification', models.CharField(max_length=50)),
                ('about', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(choices=[('MATHEMATICS', 'Mathematics'), ('PHYSICS', 'Physics'), ('CHEMISTRY', 'Chemistry'), ('BIOLOGY', 'Biology'), ('ENGLISH', 'English')], max_length=20)),
                ('level', models.CharField(choices=[('NCEA_1', 'NCEA 1'), ('NCEA_2', 'NCEA 2'), ('NCEA_3', 'NCEA 3'), ('NCEA_SCHOLARSHIP', 'NCEA Scholarship'), ('100_LEVEL', '100 Level'), ('200_LEVEL', '200 Level'), ('300_LEVEL', '300 Level'), ('400_LEVEL', '400 Level'), ('POSTGRADUATE', 'Postgraduate')], max_length=20)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor4u.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(choices=[('MATHEMATICS', 'Mathematics'), ('PHYSICS', 'Physics'), ('CHEMISTRY', 'Chemistry'), ('BIOLOGY', 'Biology'), ('ENGLISH', 'English')], max_length=20)),
                ('level', models.CharField(choices=[('NCEA_1', 'NCEA 1'), ('NCEA_2', 'NCEA 2'), ('NCEA_3', 'NCEA 3'), ('NCEA_SCHOLARSHIP', 'NCEA Scholarship'), ('100_LEVEL', '100 Level'), ('200_LEVEL', '200 Level'), ('300_LEVEL', '300 Level'), ('400_LEVEL', '400 Level'), ('POSTGRADUATE', 'Postgraduate')], max_length=20)),
                ('date', models.DateField()),
                ('duration', models.PositiveSmallIntegerField()),
                ('rate', models.DecimalField(decimal_places=2, max_digits=4)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor4u.student')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor4u.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Want',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(choices=[('MATHEMATICS', 'Mathematics'), ('PHYSICS', 'Physics'), ('CHEMISTRY', 'Chemistry'), ('BIOLOGY', 'Biology'), ('ENGLISH', 'English')], max_length=20)),
                ('level', models.CharField(choices=[('NCEA_1', 'NCEA 1'), ('NCEA_2', 'NCEA 2'), ('NCEA_3', 'NCEA 3'), ('NCEA_SCHOLARSHIP', 'NCEA Scholarship'), ('100_LEVEL', '100 Level'), ('200_LEVEL', '200 Level'), ('300_LEVEL', '300 Level'), ('400_LEVEL', '400 Level'), ('POSTGRADUATE', 'Postgraduate')], max_length=20)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor4u.student')),
            ],
        ),
    ]
